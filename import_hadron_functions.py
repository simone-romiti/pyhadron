# Importing all the R functions from hadron
# This file generates the python module `hadron_functions.py`

import hadron # hadron library imported with rpy2
import rpy2.robjects as robjects

L0 = robjects.r["lsf.str"]("package:hadron") # list of hadron functions
L1 = list(L0) # list of functions, classes, etc.
L2 = ["\n" + x + " :" for x in L0] # list of names as "\n name :"
S1 = str(L0.__str__()) # output string

# indices of substrings of S1 corresponsing to the elements of L2 
K1 = [S1.find(l) for l in L2] + [len(S1)-1]

N = len(L0)
D1 = [] # descriptions in S1
for i in range(N):
    i1 = K1[i] + len(L2[i])
    i2 = K1[i+1]
    D1.append(S1[i1:i2])
####

T1 = [] # types: function, class, etc.
for d in D1:
    T1.append(d.split(" ")[1])

T2 = N*["function"]
if(T1 == T2):
    print("Everything in hadron is a function object")
else:
    raise("Error: not everything in hadron is a function!")
####

F_out = open("hadron_functions.py", mode = "w")

F_out.write("## file generated by automatic import of hadron functions\n\n")
F_out.write("import rpy2.robjects as robjects\n\n")
F_out.write("import hadron\n\n")

M1 = [x.replace(".", "_") for x in L1]
for i in range(N):
    s = M1[i] + " = robjects.r[\"" + L1[i] + "\"]\n"
    F_out.write(s)
####

print("hadron functions successfully imported.")
